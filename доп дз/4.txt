#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <fstream>
#include <stack>
#include <queue>

using namespace std;


bool isPrime(int n) {
    if (n < 2) {
        return false;
    }
    int sqrtn = sqrt(n);
    for (int i = 2; i <= sqrtn; i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

bool isPerfectSquare(int n) {
    int sqrtN = sqrt(n);
    return sqrtN * sqrtN == n;
}

int main() {
    int n, count = 0;
    stack<int> primes;
    queue<int> squares;
    cin >> n;
    for (int i = 0; i < n; i++) {
        int num;
        cin >> num;
        if (isPrime(num)) {
            primes.push(num);
        }
        else if (isPerfectSquare(num)) {
            squares.push(num);
        }
        else {
            count++;
        }
    }
    while (!primes.empty()) {
        cout << primes.top() << " ";
        primes.pop();
    }
    cout << endl;
    while (!squares.empty()) {
        cout << squares.front() << " ";
        squares.pop();
    }
    cout << endl;
    cout << count << endl ;
    return 0;
}


//ура!
